//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SortFilter {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSetMjesta")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetMjesta : System.Data.DataSet {
        
        private MjestoDrzavaDataTable tableMjestoDrzava;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetMjesta() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetMjesta(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MjestoDrzava"] != null)) {
                    base.Tables.Add(new MjestoDrzavaDataTable(ds.Tables["MjestoDrzava"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MjestoDrzavaDataTable MjestoDrzava {
            get {
                return this.tableMjestoDrzava;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSetMjesta cln = ((DataSetMjesta)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MjestoDrzava"] != null)) {
                    base.Tables.Add(new MjestoDrzavaDataTable(ds.Tables["MjestoDrzava"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMjestoDrzava = ((MjestoDrzavaDataTable)(base.Tables["MjestoDrzava"]));
            if ((initTable == true)) {
                if ((this.tableMjestoDrzava != null)) {
                    this.tableMjestoDrzava.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetMjesta";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetMjesta.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMjestoDrzava = new MjestoDrzavaDataTable();
            base.Tables.Add(this.tableMjestoDrzava);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMjestoDrzava() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSetMjesta ds = new DataSetMjesta();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void MjestoDrzavaRowChangeEventHandler(object sender, MjestoDrzavaRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MjestoDrzavaDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIdMjesta;
            
            private System.Data.DataColumn columnNazMjesta;
            
            private System.Data.DataColumn columnPostBrMjesta;
            
            private System.Data.DataColumn columnPostNazMjesta;
            
            private System.Data.DataColumn columnNazDrzave;
            
            private System.Data.DataColumn columnOznDrzave;
            
            private System.Data.DataColumn columnISO3Drzave;
            
            private System.Data.DataColumn columnSifDrzave;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaDataTable() {
                this.TableName = "MjestoDrzava";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MjestoDrzavaDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MjestoDrzavaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdMjestaColumn {
                get {
                    return this.columnIdMjesta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NazMjestaColumn {
                get {
                    return this.columnNazMjesta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostBrMjestaColumn {
                get {
                    return this.columnPostBrMjesta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostNazMjestaColumn {
                get {
                    return this.columnPostNazMjesta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NazDrzaveColumn {
                get {
                    return this.columnNazDrzave;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OznDrzaveColumn {
                get {
                    return this.columnOznDrzave;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ISO3DrzaveColumn {
                get {
                    return this.columnISO3Drzave;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SifDrzaveColumn {
                get {
                    return this.columnSifDrzave;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaRow this[int index] {
                get {
                    return ((MjestoDrzavaRow)(this.Rows[index]));
                }
            }
            
            public event MjestoDrzavaRowChangeEventHandler MjestoDrzavaRowChanging;
            
            public event MjestoDrzavaRowChangeEventHandler MjestoDrzavaRowChanged;
            
            public event MjestoDrzavaRowChangeEventHandler MjestoDrzavaRowDeleting;
            
            public event MjestoDrzavaRowChangeEventHandler MjestoDrzavaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMjestoDrzavaRow(MjestoDrzavaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaRow AddMjestoDrzavaRow(string NazMjesta, int PostBrMjesta, string PostNazMjesta, string NazDrzave, string OznDrzave, string ISO3Drzave, int SifDrzave) {
                MjestoDrzavaRow rowMjestoDrzavaRow = ((MjestoDrzavaRow)(this.NewRow()));
                rowMjestoDrzavaRow.ItemArray = new object[] {
                        null,
                        NazMjesta,
                        PostBrMjesta,
                        PostNazMjesta,
                        NazDrzave,
                        OznDrzave,
                        ISO3Drzave,
                        SifDrzave};
                this.Rows.Add(rowMjestoDrzavaRow);
                return rowMjestoDrzavaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MjestoDrzavaDataTable cln = ((MjestoDrzavaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MjestoDrzavaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdMjesta = base.Columns["IdMjesta"];
                this.columnNazMjesta = base.Columns["NazMjesta"];
                this.columnPostBrMjesta = base.Columns["PostBrMjesta"];
                this.columnPostNazMjesta = base.Columns["PostNazMjesta"];
                this.columnNazDrzave = base.Columns["NazDrzave"];
                this.columnOznDrzave = base.Columns["OznDrzave"];
                this.columnISO3Drzave = base.Columns["ISO3Drzave"];
                this.columnSifDrzave = base.Columns["SifDrzave"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdMjesta = new System.Data.DataColumn("IdMjesta", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMjesta);
                this.columnNazMjesta = new System.Data.DataColumn("NazMjesta", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazMjesta);
                this.columnPostBrMjesta = new System.Data.DataColumn("PostBrMjesta", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostBrMjesta);
                this.columnPostNazMjesta = new System.Data.DataColumn("PostNazMjesta", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostNazMjesta);
                this.columnNazDrzave = new System.Data.DataColumn("NazDrzave", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazDrzave);
                this.columnOznDrzave = new System.Data.DataColumn("OznDrzave", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOznDrzave);
                this.columnISO3Drzave = new System.Data.DataColumn("ISO3Drzave", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnISO3Drzave);
                this.columnSifDrzave = new System.Data.DataColumn("SifDrzave", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSifDrzave);
                this.columnIdMjesta.AutoIncrement = true;
                this.columnNazMjesta.MaxLength = 40;
                this.columnPostNazMjesta.MaxLength = 50;
                this.columnNazDrzave.MaxLength = 255;
                this.columnOznDrzave.MaxLength = 3;
                this.columnISO3Drzave.MaxLength = 3;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaRow NewMjestoDrzavaRow() {
                return ((MjestoDrzavaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MjestoDrzavaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MjestoDrzavaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MjestoDrzavaRowChanged != null)) {
                    this.MjestoDrzavaRowChanged(this, new MjestoDrzavaRowChangeEvent(((MjestoDrzavaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MjestoDrzavaRowChanging != null)) {
                    this.MjestoDrzavaRowChanging(this, new MjestoDrzavaRowChangeEvent(((MjestoDrzavaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MjestoDrzavaRowDeleted != null)) {
                    this.MjestoDrzavaRowDeleted(this, new MjestoDrzavaRowChangeEvent(((MjestoDrzavaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MjestoDrzavaRowDeleting != null)) {
                    this.MjestoDrzavaRowDeleting(this, new MjestoDrzavaRowChangeEvent(((MjestoDrzavaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMjestoDrzavaRow(MjestoDrzavaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSetMjesta ds = new DataSetMjesta();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MjestoDrzavaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MjestoDrzavaRow : System.Data.DataRow {
            
            private MjestoDrzavaDataTable tableMjestoDrzava;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MjestoDrzavaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMjestoDrzava = ((MjestoDrzavaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdMjesta {
                get {
                    try {
                        return ((int)(this[this.tableMjestoDrzava.IdMjestaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IdMjesta\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.IdMjestaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NazMjesta {
                get {
                    try {
                        return ((string)(this[this.tableMjestoDrzava.NazMjestaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NazMjesta\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.NazMjestaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostBrMjesta {
                get {
                    try {
                        return ((int)(this[this.tableMjestoDrzava.PostBrMjestaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PostBrMjesta\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.PostBrMjestaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostNazMjesta {
                get {
                    try {
                        return ((string)(this[this.tableMjestoDrzava.PostNazMjestaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PostNazMjesta\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.PostNazMjestaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NazDrzave {
                get {
                    try {
                        return ((string)(this[this.tableMjestoDrzava.NazDrzaveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NazDrzave\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.NazDrzaveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OznDrzave {
                get {
                    try {
                        return ((string)(this[this.tableMjestoDrzava.OznDrzaveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OznDrzave\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.OznDrzaveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISO3Drzave {
                get {
                    try {
                        return ((string)(this[this.tableMjestoDrzava.ISO3DrzaveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ISO3Drzave\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.ISO3DrzaveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SifDrzave {
                get {
                    try {
                        return ((int)(this[this.tableMjestoDrzava.SifDrzaveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SifDrzave\' in table \'MjestoDrzava\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMjestoDrzava.SifDrzaveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdMjestaNull() {
                return this.IsNull(this.tableMjestoDrzava.IdMjestaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdMjestaNull() {
                this[this.tableMjestoDrzava.IdMjestaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazMjestaNull() {
                return this.IsNull(this.tableMjestoDrzava.NazMjestaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazMjestaNull() {
                this[this.tableMjestoDrzava.NazMjestaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostBrMjestaNull() {
                return this.IsNull(this.tableMjestoDrzava.PostBrMjestaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostBrMjestaNull() {
                this[this.tableMjestoDrzava.PostBrMjestaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostNazMjestaNull() {
                return this.IsNull(this.tableMjestoDrzava.PostNazMjestaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostNazMjestaNull() {
                this[this.tableMjestoDrzava.PostNazMjestaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazDrzaveNull() {
                return this.IsNull(this.tableMjestoDrzava.NazDrzaveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazDrzaveNull() {
                this[this.tableMjestoDrzava.NazDrzaveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOznDrzaveNull() {
                return this.IsNull(this.tableMjestoDrzava.OznDrzaveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOznDrzaveNull() {
                this[this.tableMjestoDrzava.OznDrzaveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISO3DrzaveNull() {
                return this.IsNull(this.tableMjestoDrzava.ISO3DrzaveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISO3DrzaveNull() {
                this[this.tableMjestoDrzava.ISO3DrzaveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSifDrzaveNull() {
                return this.IsNull(this.tableMjestoDrzava.SifDrzaveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSifDrzaveNull() {
                this[this.tableMjestoDrzava.SifDrzaveColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MjestoDrzavaRowChangeEvent : System.EventArgs {
            
            private MjestoDrzavaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaRowChangeEvent(MjestoDrzavaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MjestoDrzavaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591