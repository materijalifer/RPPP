//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MasterDetail {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetDokumentStavka")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetDokumentStavka : global::System.Data.DataSet {
        
        private DokumentDataTable tableDokument;
        
        private StavkaDataTable tableStavka;
        
        private ArtiklDataTable tableArtikl;
        
        private OsobaDataTable tableOsoba;
        
        private global::System.Data.DataRelation relationFK_Dokument_Dokument;
        
        private global::System.Data.DataRelation relationFK_PartnerJoin_Dokument;
        
        private global::System.Data.DataRelation relationFK_Artikl_Stavka;
        
        private global::System.Data.DataRelation relationFK_Dokument_Stavka;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetDokumentStavka() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetDokumentStavka(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Dokument"] != null)) {
                    base.Tables.Add(new DokumentDataTable(ds.Tables["Dokument"]));
                }
                if ((ds.Tables["Stavka"] != null)) {
                    base.Tables.Add(new StavkaDataTable(ds.Tables["Stavka"]));
                }
                if ((ds.Tables["Artikl"] != null)) {
                    base.Tables.Add(new ArtiklDataTable(ds.Tables["Artikl"]));
                }
                if ((ds.Tables["Osoba"] != null)) {
                    base.Tables.Add(new OsobaDataTable(ds.Tables["Osoba"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DokumentDataTable Dokument {
            get {
                return this.tableDokument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StavkaDataTable Stavka {
            get {
                return this.tableStavka;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ArtiklDataTable Artikl {
            get {
                return this.tableArtikl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OsobaDataTable Osoba {
            get {
                return this.tableOsoba;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetDokumentStavka cln = ((DataSetDokumentStavka)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Dokument"] != null)) {
                    base.Tables.Add(new DokumentDataTable(ds.Tables["Dokument"]));
                }
                if ((ds.Tables["Stavka"] != null)) {
                    base.Tables.Add(new StavkaDataTable(ds.Tables["Stavka"]));
                }
                if ((ds.Tables["Artikl"] != null)) {
                    base.Tables.Add(new ArtiklDataTable(ds.Tables["Artikl"]));
                }
                if ((ds.Tables["Osoba"] != null)) {
                    base.Tables.Add(new OsobaDataTable(ds.Tables["Osoba"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDokument = ((DokumentDataTable)(base.Tables["Dokument"]));
            if ((initTable == true)) {
                if ((this.tableDokument != null)) {
                    this.tableDokument.InitVars();
                }
            }
            this.tableStavka = ((StavkaDataTable)(base.Tables["Stavka"]));
            if ((initTable == true)) {
                if ((this.tableStavka != null)) {
                    this.tableStavka.InitVars();
                }
            }
            this.tableArtikl = ((ArtiklDataTable)(base.Tables["Artikl"]));
            if ((initTable == true)) {
                if ((this.tableArtikl != null)) {
                    this.tableArtikl.InitVars();
                }
            }
            this.tableOsoba = ((OsobaDataTable)(base.Tables["Osoba"]));
            if ((initTable == true)) {
                if ((this.tableOsoba != null)) {
                    this.tableOsoba.InitVars();
                }
            }
            this.relationFK_Dokument_Dokument = this.Relations["FK_Dokument_Dokument"];
            this.relationFK_PartnerJoin_Dokument = this.Relations["FK_PartnerJoin_Dokument"];
            this.relationFK_Artikl_Stavka = this.Relations["FK_Artikl_Stavka"];
            this.relationFK_Dokument_Stavka = this.Relations["FK_Dokument_Stavka"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetDokumentStavka";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetDokumentStavka.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDokument = new DokumentDataTable(false);
            base.Tables.Add(this.tableDokument);
            this.tableStavka = new StavkaDataTable(false);
            base.Tables.Add(this.tableStavka);
            this.tableArtikl = new ArtiklDataTable();
            base.Tables.Add(this.tableArtikl);
            this.tableOsoba = new OsobaDataTable();
            base.Tables.Add(this.tableOsoba);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Dokument_Dokument", new global::System.Data.DataColumn[] {
                        this.tableDokument.IdPrethDokumentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableDokument.IdDokumentaColumn});
            this.tableDokument.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_PartnerJoin_Dokument", new global::System.Data.DataColumn[] {
                        this.tableOsoba.IdPartneraColumn}, new global::System.Data.DataColumn[] {
                        this.tableDokument.IdPartneraColumn});
            this.tableDokument.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Artikl_Stavka", new global::System.Data.DataColumn[] {
                        this.tableArtikl.SifArtiklaColumn}, new global::System.Data.DataColumn[] {
                        this.tableStavka.SifArtiklaColumn});
            this.tableStavka.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Dokument_Stavka", new global::System.Data.DataColumn[] {
                        this.tableDokument.IdDokumentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableStavka.IdDokumentaColumn});
            this.tableStavka.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Dokument_Dokument = new global::System.Data.DataRelation("FK_Dokument_Dokument", new global::System.Data.DataColumn[] {
                        this.tableDokument.IdPrethDokumentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableDokument.IdDokumentaColumn}, false);
            this.Relations.Add(this.relationFK_Dokument_Dokument);
            this.relationFK_PartnerJoin_Dokument = new global::System.Data.DataRelation("FK_PartnerJoin_Dokument", new global::System.Data.DataColumn[] {
                        this.tableOsoba.IdPartneraColumn}, new global::System.Data.DataColumn[] {
                        this.tableDokument.IdPartneraColumn}, false);
            this.Relations.Add(this.relationFK_PartnerJoin_Dokument);
            this.relationFK_Artikl_Stavka = new global::System.Data.DataRelation("FK_Artikl_Stavka", new global::System.Data.DataColumn[] {
                        this.tableArtikl.SifArtiklaColumn}, new global::System.Data.DataColumn[] {
                        this.tableStavka.SifArtiklaColumn}, false);
            this.Relations.Add(this.relationFK_Artikl_Stavka);
            this.relationFK_Dokument_Stavka = new global::System.Data.DataRelation("FK_Dokument_Stavka", new global::System.Data.DataColumn[] {
                        this.tableDokument.IdDokumentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableStavka.IdDokumentaColumn}, false);
            this.Relations.Add(this.relationFK_Dokument_Stavka);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDokument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStavka() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeArtikl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOsoba() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetDokumentStavka ds = new DataSetDokumentStavka();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitExpressions() {
            this.Dokument.UkIznosDokumentaColumn.Expression = "Sum(Child(FK_Dokument_Stavka).UkCijArtikla) * (1 + PostoPorez)";
            this.Dokument.BrStavkiColumn.Expression = "Count(Child(FK_Dokument_Stavka).IdDokumenta)";
            this.Dokument.NazDokumentaColumn.Expression = "VrDokumenta+\' \'+BrDokumenta+\' - \'+DatDokumenta+\' (\'+IdDokumenta+\')\'";
            this.Stavka.UkCijArtiklaColumn.Expression = "JedCijArtikla * KolArtikla * (1 - PostoRabat)";
        }
        
        public delegate void DokumentRowChangeEventHandler(object sender, DokumentRowChangeEvent e);
        
        public delegate void StavkaRowChangeEventHandler(object sender, StavkaRowChangeEvent e);
        
        public delegate void ArtiklRowChangeEventHandler(object sender, ArtiklRowChangeEvent e);
        
        public delegate void OsobaRowChangeEventHandler(object sender, OsobaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DokumentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIdDokumenta;
            
            private global::System.Data.DataColumn columnVrDokumenta;
            
            private global::System.Data.DataColumn columnBrDokumenta;
            
            private global::System.Data.DataColumn columnDatDokumenta;
            
            private global::System.Data.DataColumn columnIdPartnera;
            
            private global::System.Data.DataColumn columnIdPrethDokumenta;
            
            private global::System.Data.DataColumn columnPostoPorez;
            
            private global::System.Data.DataColumn columnIznosDokumenta;
            
            private global::System.Data.DataColumn columnUkIznosDokumenta;
            
            private global::System.Data.DataColumn columnBrStavki;
            
            private global::System.Data.DataColumn columnNazDokumenta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentDataTable(bool initExpressions) {
                this.TableName = "Dokument";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DokumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DokumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdDokumentaColumn {
                get {
                    return this.columnIdDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VrDokumentaColumn {
                get {
                    return this.columnVrDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrDokumentaColumn {
                get {
                    return this.columnBrDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatDokumentaColumn {
                get {
                    return this.columnDatDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdPartneraColumn {
                get {
                    return this.columnIdPartnera;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdPrethDokumentaColumn {
                get {
                    return this.columnIdPrethDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostoPorezColumn {
                get {
                    return this.columnPostoPorez;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IznosDokumentaColumn {
                get {
                    return this.columnIznosDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UkIznosDokumentaColumn {
                get {
                    return this.columnUkIznosDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrStavkiColumn {
                get {
                    return this.columnBrStavki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazDokumentaColumn {
                get {
                    return this.columnNazDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow this[int index] {
                get {
                    return ((DokumentRow)(this.Rows[index]));
                }
            }
            
            public event DokumentRowChangeEventHandler DokumentRowChanging;
            
            public event DokumentRowChangeEventHandler DokumentRowChanged;
            
            public event DokumentRowChangeEventHandler DokumentRowDeleting;
            
            public event DokumentRowChangeEventHandler DokumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDokumentRow(DokumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow AddDokumentRow(string VrDokumenta, int BrDokumenta, System.DateTime DatDokumenta, OsobaRow parentOsobaRowByFK_PartnerJoin_Dokument, int IdPrethDokumenta, decimal PostoPorez, decimal IznosDokumenta, decimal UkIznosDokumenta, int BrStavki, string NazDokumenta) {
                DokumentRow rowDokumentRow = ((DokumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VrDokumenta,
                        BrDokumenta,
                        DatDokumenta,
                        null,
                        IdPrethDokumenta,
                        PostoPorez,
                        IznosDokumenta,
                        UkIznosDokumenta,
                        BrStavki,
                        NazDokumenta};
                if ((parentOsobaRowByFK_PartnerJoin_Dokument != null)) {
                    columnValuesArray[4] = parentOsobaRowByFK_PartnerJoin_Dokument[0];
                }
                rowDokumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDokumentRow);
                return rowDokumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow AddDokumentRow(string VrDokumenta, int BrDokumenta, System.DateTime DatDokumenta, OsobaRow parentOsobaRowByFK_PartnerJoin_Dokument, int IdPrethDokumenta, decimal PostoPorez, decimal IznosDokumenta) {
                DokumentRow rowDokumentRow = ((DokumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VrDokumenta,
                        BrDokumenta,
                        DatDokumenta,
                        null,
                        IdPrethDokumenta,
                        PostoPorez,
                        IznosDokumenta,
                        null,
                        null,
                        null};
                if ((parentOsobaRowByFK_PartnerJoin_Dokument != null)) {
                    columnValuesArray[4] = parentOsobaRowByFK_PartnerJoin_Dokument[0];
                }
                rowDokumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDokumentRow);
                return rowDokumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow FindByIdDokumenta(int IdDokumenta) {
                return ((DokumentRow)(this.Rows.Find(new object[] {
                            IdDokumenta})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DokumentDataTable cln = ((DokumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DokumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdDokumenta = base.Columns["IdDokumenta"];
                this.columnVrDokumenta = base.Columns["VrDokumenta"];
                this.columnBrDokumenta = base.Columns["BrDokumenta"];
                this.columnDatDokumenta = base.Columns["DatDokumenta"];
                this.columnIdPartnera = base.Columns["IdPartnera"];
                this.columnIdPrethDokumenta = base.Columns["IdPrethDokumenta"];
                this.columnPostoPorez = base.Columns["PostoPorez"];
                this.columnIznosDokumenta = base.Columns["IznosDokumenta"];
                this.columnUkIznosDokumenta = base.Columns["UkIznosDokumenta"];
                this.columnBrStavki = base.Columns["BrStavki"];
                this.columnNazDokumenta = base.Columns["NazDokumenta"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdDokumenta = new global::System.Data.DataColumn("IdDokumenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdDokumenta);
                this.columnVrDokumenta = new global::System.Data.DataColumn("VrDokumenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrDokumenta);
                this.columnBrDokumenta = new global::System.Data.DataColumn("BrDokumenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrDokumenta);
                this.columnDatDokumenta = new global::System.Data.DataColumn("DatDokumenta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatDokumenta);
                this.columnIdPartnera = new global::System.Data.DataColumn("IdPartnera", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPartnera);
                this.columnIdPrethDokumenta = new global::System.Data.DataColumn("IdPrethDokumenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPrethDokumenta);
                this.columnPostoPorez = new global::System.Data.DataColumn("PostoPorez", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostoPorez);
                this.columnIznosDokumenta = new global::System.Data.DataColumn("IznosDokumenta", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIznosDokumenta);
                this.columnUkIznosDokumenta = new global::System.Data.DataColumn("UkIznosDokumenta", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUkIznosDokumenta);
                this.columnBrStavki = new global::System.Data.DataColumn("BrStavki", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrStavki);
                this.columnNazDokumenta = new global::System.Data.DataColumn("NazDokumenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazDokumenta);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdDokumenta}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnIdPrethDokumenta}, false));
                this.columnIdDokumenta.AutoIncrement = true;
                this.columnIdDokumenta.AllowDBNull = false;
                this.columnIdDokumenta.Unique = true;
                this.columnVrDokumenta.MaxLength = 20;
                this.columnIdPrethDokumenta.Unique = true;
                this.columnUkIznosDokumenta.ReadOnly = true;
                this.columnBrStavki.ReadOnly = true;
                this.columnNazDokumenta.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow NewDokumentRow() {
                return ((DokumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DokumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DokumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.UkIznosDokumentaColumn.Expression = "Sum(Child(FK_Dokument_Stavka).UkCijArtikla) * (1 + PostoPorez)";
                this.BrStavkiColumn.Expression = "Count(Child(FK_Dokument_Stavka).IdDokumenta)";
                this.NazDokumentaColumn.Expression = "VrDokumenta+\' \'+BrDokumenta+\' - \'+DatDokumenta+\' (\'+IdDokumenta+\')\'";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DokumentRowChanged != null)) {
                    this.DokumentRowChanged(this, new DokumentRowChangeEvent(((DokumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DokumentRowChanging != null)) {
                    this.DokumentRowChanging(this, new DokumentRowChangeEvent(((DokumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DokumentRowDeleted != null)) {
                    this.DokumentRowDeleted(this, new DokumentRowChangeEvent(((DokumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DokumentRowDeleting != null)) {
                    this.DokumentRowDeleting(this, new DokumentRowChangeEvent(((DokumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDokumentRow(DokumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDokumentStavka ds = new DataSetDokumentStavka();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DokumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StavkaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIdDokumenta;
            
            private global::System.Data.DataColumn columnSifArtikla;
            
            private global::System.Data.DataColumn columnKolArtikla;
            
            private global::System.Data.DataColumn columnJedCijArtikla;
            
            private global::System.Data.DataColumn columnPostoRabat;
            
            private global::System.Data.DataColumn columnUkCijArtikla;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaDataTable(bool initExpressions) {
                this.TableName = "Stavka";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StavkaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StavkaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdDokumentaColumn {
                get {
                    return this.columnIdDokumenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SifArtiklaColumn {
                get {
                    return this.columnSifArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KolArtiklaColumn {
                get {
                    return this.columnKolArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JedCijArtiklaColumn {
                get {
                    return this.columnJedCijArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostoRabatColumn {
                get {
                    return this.columnPostoRabat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UkCijArtiklaColumn {
                get {
                    return this.columnUkCijArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow this[int index] {
                get {
                    return ((StavkaRow)(this.Rows[index]));
                }
            }
            
            public event StavkaRowChangeEventHandler StavkaRowChanging;
            
            public event StavkaRowChangeEventHandler StavkaRowChanged;
            
            public event StavkaRowChangeEventHandler StavkaRowDeleting;
            
            public event StavkaRowChangeEventHandler StavkaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStavkaRow(StavkaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow AddStavkaRow(DokumentRow parentDokumentRowByFK_Dokument_Stavka, ArtiklRow parentArtiklRowByFK_Artikl_Stavka, decimal KolArtikla, decimal JedCijArtikla, decimal PostoRabat, decimal UkCijArtikla) {
                StavkaRow rowStavkaRow = ((StavkaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        KolArtikla,
                        JedCijArtikla,
                        PostoRabat,
                        UkCijArtikla};
                if ((parentDokumentRowByFK_Dokument_Stavka != null)) {
                    columnValuesArray[0] = parentDokumentRowByFK_Dokument_Stavka[0];
                }
                if ((parentArtiklRowByFK_Artikl_Stavka != null)) {
                    columnValuesArray[1] = parentArtiklRowByFK_Artikl_Stavka[0];
                }
                rowStavkaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStavkaRow);
                return rowStavkaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow AddStavkaRow(DokumentRow parentDokumentRowByFK_Dokument_Stavka, ArtiklRow parentArtiklRowByFK_Artikl_Stavka, decimal KolArtikla, decimal JedCijArtikla, decimal PostoRabat) {
                StavkaRow rowStavkaRow = ((StavkaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        KolArtikla,
                        JedCijArtikla,
                        PostoRabat,
                        null};
                if ((parentDokumentRowByFK_Dokument_Stavka != null)) {
                    columnValuesArray[0] = parentDokumentRowByFK_Dokument_Stavka[0];
                }
                if ((parentArtiklRowByFK_Artikl_Stavka != null)) {
                    columnValuesArray[1] = parentArtiklRowByFK_Artikl_Stavka[0];
                }
                rowStavkaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStavkaRow);
                return rowStavkaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow FindByIdDokumentaSifArtikla(int IdDokumenta, int SifArtikla) {
                return ((StavkaRow)(this.Rows.Find(new object[] {
                            IdDokumenta,
                            SifArtikla})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StavkaDataTable cln = ((StavkaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StavkaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdDokumenta = base.Columns["IdDokumenta"];
                this.columnSifArtikla = base.Columns["SifArtikla"];
                this.columnKolArtikla = base.Columns["KolArtikla"];
                this.columnJedCijArtikla = base.Columns["JedCijArtikla"];
                this.columnPostoRabat = base.Columns["PostoRabat"];
                this.columnUkCijArtikla = base.Columns["UkCijArtikla"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdDokumenta = new global::System.Data.DataColumn("IdDokumenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdDokumenta);
                this.columnSifArtikla = new global::System.Data.DataColumn("SifArtikla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSifArtikla);
                this.columnKolArtikla = new global::System.Data.DataColumn("KolArtikla", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKolArtikla);
                this.columnJedCijArtikla = new global::System.Data.DataColumn("JedCijArtikla", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJedCijArtikla);
                this.columnPostoRabat = new global::System.Data.DataColumn("PostoRabat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostoRabat);
                this.columnUkCijArtikla = new global::System.Data.DataColumn("UkCijArtikla", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUkCijArtikla);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdDokumenta,
                                this.columnSifArtikla}, true));
                this.columnIdDokumenta.AllowDBNull = false;
                this.columnSifArtikla.AllowDBNull = false;
                this.columnUkCijArtikla.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow NewStavkaRow() {
                return ((StavkaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StavkaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StavkaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.UkCijArtiklaColumn.Expression = "JedCijArtikla * KolArtikla * (1 - PostoRabat)";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StavkaRowChanged != null)) {
                    this.StavkaRowChanged(this, new StavkaRowChangeEvent(((StavkaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StavkaRowChanging != null)) {
                    this.StavkaRowChanging(this, new StavkaRowChangeEvent(((StavkaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StavkaRowDeleted != null)) {
                    this.StavkaRowDeleted(this, new StavkaRowChangeEvent(((StavkaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StavkaRowDeleting != null)) {
                    this.StavkaRowDeleting(this, new StavkaRowChangeEvent(((StavkaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStavkaRow(StavkaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDokumentStavka ds = new DataSetDokumentStavka();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StavkaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ArtiklDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSifArtikla;
            
            private global::System.Data.DataColumn columnNazArtikla;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklDataTable() {
                this.TableName = "Artikl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ArtiklDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ArtiklDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SifArtiklaColumn {
                get {
                    return this.columnSifArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazArtiklaColumn {
                get {
                    return this.columnNazArtikla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow this[int index] {
                get {
                    return ((ArtiklRow)(this.Rows[index]));
                }
            }
            
            public event ArtiklRowChangeEventHandler ArtiklRowChanging;
            
            public event ArtiklRowChangeEventHandler ArtiklRowChanged;
            
            public event ArtiklRowChangeEventHandler ArtiklRowDeleting;
            
            public event ArtiklRowChangeEventHandler ArtiklRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddArtiklRow(ArtiklRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow AddArtiklRow(int SifArtikla, string NazArtikla) {
                ArtiklRow rowArtiklRow = ((ArtiklRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SifArtikla,
                        NazArtikla};
                rowArtiklRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowArtiklRow);
                return rowArtiklRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow FindBySifArtikla(int SifArtikla) {
                return ((ArtiklRow)(this.Rows.Find(new object[] {
                            SifArtikla})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ArtiklDataTable cln = ((ArtiklDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ArtiklDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSifArtikla = base.Columns["SifArtikla"];
                this.columnNazArtikla = base.Columns["NazArtikla"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSifArtikla = new global::System.Data.DataColumn("SifArtikla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSifArtikla);
                this.columnNazArtikla = new global::System.Data.DataColumn("NazArtikla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazArtikla);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSifArtikla}, true));
                this.columnSifArtikla.AllowDBNull = false;
                this.columnSifArtikla.Unique = true;
                this.columnNazArtikla.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow NewArtiklRow() {
                return ((ArtiklRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ArtiklRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ArtiklRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ArtiklRowChanged != null)) {
                    this.ArtiklRowChanged(this, new ArtiklRowChangeEvent(((ArtiklRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ArtiklRowChanging != null)) {
                    this.ArtiklRowChanging(this, new ArtiklRowChangeEvent(((ArtiklRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ArtiklRowDeleted != null)) {
                    this.ArtiklRowDeleted(this, new ArtiklRowChangeEvent(((ArtiklRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ArtiklRowDeleting != null)) {
                    this.ArtiklRowDeleting(this, new ArtiklRowChangeEvent(((ArtiklRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveArtiklRow(ArtiklRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDokumentStavka ds = new DataSetDokumentStavka();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ArtiklDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OsobaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIdPartnera;
            
            private global::System.Data.DataColumn columnNazPartnera;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaDataTable() {
                this.TableName = "Osoba";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OsobaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OsobaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdPartneraColumn {
                get {
                    return this.columnIdPartnera;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazPartneraColumn {
                get {
                    return this.columnNazPartnera;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRow this[int index] {
                get {
                    return ((OsobaRow)(this.Rows[index]));
                }
            }
            
            public event OsobaRowChangeEventHandler OsobaRowChanging;
            
            public event OsobaRowChangeEventHandler OsobaRowChanged;
            
            public event OsobaRowChangeEventHandler OsobaRowDeleting;
            
            public event OsobaRowChangeEventHandler OsobaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOsobaRow(OsobaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRow AddOsobaRow(int IdPartnera, string NazPartnera) {
                OsobaRow rowOsobaRow = ((OsobaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IdPartnera,
                        NazPartnera};
                rowOsobaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOsobaRow);
                return rowOsobaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OsobaDataTable cln = ((OsobaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OsobaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdPartnera = base.Columns["IdPartnera"];
                this.columnNazPartnera = base.Columns["NazPartnera"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdPartnera = new global::System.Data.DataColumn("IdPartnera", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPartnera);
                this.columnNazPartnera = new global::System.Data.DataColumn("NazPartnera", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNazPartnera);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdPartnera}, false));
                this.columnIdPartnera.Unique = true;
                this.columnNazPartnera.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRow NewOsobaRow() {
                return ((OsobaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OsobaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OsobaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OsobaRowChanged != null)) {
                    this.OsobaRowChanged(this, new OsobaRowChangeEvent(((OsobaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OsobaRowChanging != null)) {
                    this.OsobaRowChanging(this, new OsobaRowChangeEvent(((OsobaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OsobaRowDeleted != null)) {
                    this.OsobaRowDeleted(this, new OsobaRowChangeEvent(((OsobaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OsobaRowDeleting != null)) {
                    this.OsobaRowDeleting(this, new OsobaRowChangeEvent(((OsobaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOsobaRow(OsobaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDokumentStavka ds = new DataSetDokumentStavka();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OsobaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DokumentRow : global::System.Data.DataRow {
            
            private DokumentDataTable tableDokument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DokumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDokument = ((DokumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdDokumenta {
                get {
                    return ((int)(this[this.tableDokument.IdDokumentaColumn]));
                }
                set {
                    this[this.tableDokument.IdDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VrDokumenta {
                get {
                    try {
                        return ((string)(this[this.tableDokument.VrDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VrDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.VrDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BrDokumenta {
                get {
                    try {
                        return ((int)(this[this.tableDokument.BrDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.BrDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DatDokumenta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDokument.DatDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DatDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.DatDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdPartnera {
                get {
                    try {
                        return ((int)(this[this.tableDokument.IdPartneraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdPartnera\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.IdPartneraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdPrethDokumenta {
                get {
                    try {
                        return ((int)(this[this.tableDokument.IdPrethDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdPrethDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.IdPrethDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PostoPorez {
                get {
                    try {
                        return ((decimal)(this[this.tableDokument.PostoPorezColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostoPorez\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.PostoPorezColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IznosDokumenta {
                get {
                    try {
                        return ((decimal)(this[this.tableDokument.IznosDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IznosDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.IznosDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UkIznosDokumenta {
                get {
                    try {
                        return ((decimal)(this[this.tableDokument.UkIznosDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UkIznosDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.UkIznosDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BrStavki {
                get {
                    try {
                        return ((int)(this[this.tableDokument.BrStavkiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrStavki\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.BrStavkiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NazDokumenta {
                get {
                    try {
                        return ((string)(this[this.tableDokument.NazDokumentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NazDokumenta\' in table \'Dokument\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDokument.NazDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow DokumentRowParent {
                get {
                    return ((DokumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_Dokument_Dokument"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Dokument_Dokument"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRow OsobaRow {
                get {
                    return ((OsobaRow)(this.GetParentRow(this.Table.ParentRelations["FK_PartnerJoin_Dokument"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PartnerJoin_Dokument"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVrDokumentaNull() {
                return this.IsNull(this.tableDokument.VrDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVrDokumentaNull() {
                this[this.tableDokument.VrDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrDokumentaNull() {
                return this.IsNull(this.tableDokument.BrDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrDokumentaNull() {
                this[this.tableDokument.BrDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatDokumentaNull() {
                return this.IsNull(this.tableDokument.DatDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatDokumentaNull() {
                this[this.tableDokument.DatDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdPartneraNull() {
                return this.IsNull(this.tableDokument.IdPartneraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdPartneraNull() {
                this[this.tableDokument.IdPartneraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdPrethDokumentaNull() {
                return this.IsNull(this.tableDokument.IdPrethDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdPrethDokumentaNull() {
                this[this.tableDokument.IdPrethDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostoPorezNull() {
                return this.IsNull(this.tableDokument.PostoPorezColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostoPorezNull() {
                this[this.tableDokument.PostoPorezColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIznosDokumentaNull() {
                return this.IsNull(this.tableDokument.IznosDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIznosDokumentaNull() {
                this[this.tableDokument.IznosDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUkIznosDokumentaNull() {
                return this.IsNull(this.tableDokument.UkIznosDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUkIznosDokumentaNull() {
                this[this.tableDokument.UkIznosDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrStavkiNull() {
                return this.IsNull(this.tableDokument.BrStavkiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrStavkiNull() {
                this[this.tableDokument.BrStavkiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazDokumentaNull() {
                return this.IsNull(this.tableDokument.NazDokumentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazDokumentaNull() {
                this[this.tableDokument.NazDokumentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow[] GetStavkaRows() {
                if ((this.Table.ChildRelations["FK_Dokument_Stavka"] == null)) {
                    return new StavkaRow[0];
                }
                else {
                    return ((StavkaRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Dokument_Stavka"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow[] GetDokumentRows() {
                if ((this.Table.ChildRelations["FK_Dokument_Dokument"] == null)) {
                    return new DokumentRow[0];
                }
                else {
                    return ((DokumentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Dokument_Dokument"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StavkaRow : global::System.Data.DataRow {
            
            private StavkaDataTable tableStavka;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StavkaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStavka = ((StavkaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdDokumenta {
                get {
                    return ((int)(this[this.tableStavka.IdDokumentaColumn]));
                }
                set {
                    this[this.tableStavka.IdDokumentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SifArtikla {
                get {
                    return ((int)(this[this.tableStavka.SifArtiklaColumn]));
                }
                set {
                    this[this.tableStavka.SifArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KolArtikla {
                get {
                    try {
                        return ((decimal)(this[this.tableStavka.KolArtiklaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KolArtikla\' in table \'Stavka\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavka.KolArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JedCijArtikla {
                get {
                    try {
                        return ((decimal)(this[this.tableStavka.JedCijArtiklaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JedCijArtikla\' in table \'Stavka\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavka.JedCijArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PostoRabat {
                get {
                    try {
                        return ((decimal)(this[this.tableStavka.PostoRabatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostoRabat\' in table \'Stavka\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavka.PostoRabatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UkCijArtikla {
                get {
                    try {
                        return ((decimal)(this[this.tableStavka.UkCijArtiklaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UkCijArtikla\' in table \'Stavka\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavka.UkCijArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow ArtiklRow {
                get {
                    return ((ArtiklRow)(this.GetParentRow(this.Table.ParentRelations["FK_Artikl_Stavka"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Artikl_Stavka"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow DokumentRow {
                get {
                    return ((DokumentRow)(this.GetParentRow(this.Table.ParentRelations["FK_Dokument_Stavka"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Dokument_Stavka"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKolArtiklaNull() {
                return this.IsNull(this.tableStavka.KolArtiklaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKolArtiklaNull() {
                this[this.tableStavka.KolArtiklaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJedCijArtiklaNull() {
                return this.IsNull(this.tableStavka.JedCijArtiklaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJedCijArtiklaNull() {
                this[this.tableStavka.JedCijArtiklaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostoRabatNull() {
                return this.IsNull(this.tableStavka.PostoRabatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostoRabatNull() {
                this[this.tableStavka.PostoRabatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUkCijArtiklaNull() {
                return this.IsNull(this.tableStavka.UkCijArtiklaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUkCijArtiklaNull() {
                this[this.tableStavka.UkCijArtiklaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ArtiklRow : global::System.Data.DataRow {
            
            private ArtiklDataTable tableArtikl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ArtiklRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableArtikl = ((ArtiklDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SifArtikla {
                get {
                    return ((int)(this[this.tableArtikl.SifArtiklaColumn]));
                }
                set {
                    this[this.tableArtikl.SifArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NazArtikla {
                get {
                    try {
                        return ((string)(this[this.tableArtikl.NazArtiklaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NazArtikla\' in table \'Artikl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableArtikl.NazArtiklaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazArtiklaNull() {
                return this.IsNull(this.tableArtikl.NazArtiklaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazArtiklaNull() {
                this[this.tableArtikl.NazArtiklaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow[] GetStavkaRows() {
                if ((this.Table.ChildRelations["FK_Artikl_Stavka"] == null)) {
                    return new StavkaRow[0];
                }
                else {
                    return ((StavkaRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Artikl_Stavka"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OsobaRow : global::System.Data.DataRow {
            
            private OsobaDataTable tableOsoba;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OsobaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOsoba = ((OsobaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdPartnera {
                get {
                    try {
                        return ((int)(this[this.tableOsoba.IdPartneraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdPartnera\' in table \'Osoba\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOsoba.IdPartneraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NazPartnera {
                get {
                    try {
                        return ((string)(this[this.tableOsoba.NazPartneraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NazPartnera\' in table \'Osoba\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOsoba.NazPartneraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdPartneraNull() {
                return this.IsNull(this.tableOsoba.IdPartneraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdPartneraNull() {
                this[this.tableOsoba.IdPartneraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazPartneraNull() {
                return this.IsNull(this.tableOsoba.NazPartneraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazPartneraNull() {
                this[this.tableOsoba.NazPartneraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow[] GetDokumentRows() {
                if ((this.Table.ChildRelations["FK_PartnerJoin_Dokument"] == null)) {
                    return new DokumentRow[0];
                }
                else {
                    return ((DokumentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PartnerJoin_Dokument"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DokumentRowChangeEvent : global::System.EventArgs {
            
            private DokumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRowChangeEvent(DokumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DokumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StavkaRowChangeEvent : global::System.EventArgs {
            
            private StavkaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRowChangeEvent(StavkaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ArtiklRowChangeEvent : global::System.EventArgs {
            
            private ArtiklRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRowChangeEvent(ArtiklRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ArtiklRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OsobaRowChangeEvent : global::System.EventArgs {
            
            private OsobaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRowChangeEvent(OsobaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OsobaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591